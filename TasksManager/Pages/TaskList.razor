@page "/tasklist"
@inject TasksBLL taskBll
@inject UserManager<IdentityUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
<h3>Lista de Tareas y Usuarios</h3>
<a class="btn btn-primary" href="/rtasks">Agregar nuevo</a>
<a class="btn btn-primary" href="/">Inicio</a>

<table class="table">
    <thead>
        <tr>
            <th>ID Tarea</th>
            <th>Título</th>
            <th>Descripción</th>
            <th>Fecha de Vencimiento</th>
            <th>Completada</th>
            <th>Prioridad</th>
            <th>ID Usuario</th>
            <th>Nombre Usuario</th>
            <th>Correo Electrónico</th>
            <th>Activo</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var task in tasks)
        {
            <tr>
                <td>@task.Id</td>
                <td>@task.Title</td>
                <td>@task.Description</td>
                <td>@task.DueDate.ToShortDateString()</td>
                <td>
                    <input type="checkbox" @bind="task.IsCompleted" disabled="@(task.IsCompleted ? "disabled" : null)" />
                </td>
                <td>@task.Priority</td>
                <td>@task.UserId</td>
            </tr>
        }
    </tbody>
</table>


@code {
    private List<Tasks> tasks;

    protected override void  OnInitialized()
    {
        var user = AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User;
        var userId = UserManager.GetUserId(user);

        tasks = new();
        tasks = taskBll.GetTasks(userId);
    }
}
